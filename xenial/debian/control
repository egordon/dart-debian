Source: dart6-nightly
Priority: extra
Maintainer: Jeongseok Lee <jslee02@gmail.com>
Build-Depends: debhelper (>= 9),
               cmake,
               git,
               libeigen3-dev,
               libccd-dev,
               libfcl-dev (>= 0.2.7),
               libbullet-dev,
               libode-dev,
               libassimp-dev (>= 3),
               libnlopt-dev,
               coinor-libipopt-dev,
               freeglut3-dev,
               libxi-dev,
               libxmu-dev,
               libflann-dev (>= 1.8),
               libtinyxml-dev,
               libtinyxml2-dev,
               liburdfdom-dev,
               libboost-dev (>= 1.54.0.1ubuntu1),
               libboost-system-dev (>= 1.54.0-4ubuntu3),
               libboost-regex-dev (>= 1.54.0-4ubuntu3),
               liboctomap-dev,
               libopenthreads-dev,
               libopenscenegraph-dev,
               liblz4-dev
Standards-Version: 3.9.8
Section: libs
Homepage: http://dartsim.github.io/
Vcs-Git: git://github.com/dartsim/dart.git
Vcs-Browser: https://github.com/dartsim/dart

Package: libdart6-nightly-external-ikfast-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends}
Description: IKFast - Development
 Header file for all ikfast c++ files/shared objects. The ikfast inverse
 kinematics compiler is part of OpenRAVE.

Package: libdart6-nightly-external-imgui
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: dear imgui (AKA ImGui) - Shared Files
 dear imgui (AKA ImGui), is a bloat-free graphical user interface library for
 C++. It outputs optimized vertex buffers that you can render anytime in your
 3D-pipeline enabled application. It is fast, portable, renderer agnostic and
 self-contained (no external dependencies).

Package: libdart6-nightly-external-imgui-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-external-imgui (= ${binary:Version})
Description: dear imgui (AKA ImGui) - Development
 dear imgui (AKA ImGui), is a bloat-free graphical user interface library for
 C++. It outputs optimized vertex buffers that you can render anytime in your
 3D-pipeline enabled application. It is fast, portable, renderer agnostic and
 self-contained (no external dependencies).

Package: libdart6-nightly-external-lodepng
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: LodePNG - Shared Files
 LodePNG is a PNG image decoder and encoder, all in one, no dependency or
 linkage to zlib or libpng required. It's made for C (ISO C90), and has a C++
 wrapper with a more convenient interface on top.

Package: libdart6-nightly-external-lodepng-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-external-lodepng (= ${binary:Version})
Description: LodePNG - Development Files
 LodePNG is a PNG image decoder and encoder, all in one, no dependency or
 linkage to zlib or libpng required. It's made for C (ISO C90), and has a C++
 wrapper with a more convenient interface on top.

Package: libdart6-nightly-external-odelcpsolver
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Open Dynamics Engine - Shared Library
 ODE is a free, industrial quality library for simulating articulated rigid body
 dynamics - for example ground vehicles, legged creatures, and moving objects in
 VR environments. It is fast, flexible, robust and platform independent, with
 advanced joints, contact with friction, and built-in collision detection.

Package: libdart6-nightly-external-odelcpsolver-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-external-odelcpsolver (= ${binary:Version})
Description: Open Dynamics Engine - Development Files
 ODE is a free, industrial quality library for simulating articulated rigid body
 dynamics - for example ground vehicles, legged creatures, and moving objects in
 VR environments. It is fast, flexible, robust and platform independent, with
 advanced joints, contact with friction, and built-in collision detection.

Package: libdart6-nightly
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - Shared Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Conflicts: libdart-core3-dev, libdart-core4-dev, libdart-core5-dev, libdart6-nightly-dev
Depends: ${misc:Depends},
         libdart6-nightly (= ${binary:Version}),
         libdart6-nightly-external-ikfast-dev,
         libdart6-nightly-external-odelcpsolver-dev,
         libeigen3-dev,
         libassimp-dev (>= 3),
         libccd-dev,
         libfcl-dev,
         libboost-all-dev (>= 1.54.0.1ubuntu1),
         liboctomap-dev
Description: Dynamic Animation and Robotics Toolkit - Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-optimizer-nlopt
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - Optimizer-nlopt Component Shared Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-optimizer-nlopt-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-dev,
         libdart6-nightly-optimizer-nlopt (= ${binary:Version}),
         libnlopt-dev
Description: Dynamic Animation and Robotics Toolkit - Optimizer-nlopt Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-optimizer-ipopt
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - Optimizer-ipopt Component Shared Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-optimizer-ipopt-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-dev,
         libdart6-nightly-optimizer-ipopt (= ${binary:Version}),
         coinor-libipopt-dev (>= 3.11.9)
Description: Dynamic Animation and Robotics Toolkit - Optimizer-ipopt Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-collision-bullet
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - Utils Component Shared Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-collision-bullet-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-dev,
         libdart6-nightly-collision-bullet (= ${binary:Version}),
         libbullet-dev
Description: Dynamic Animation and Robotics Toolkit - Utils Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-collision-ode
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - Utils Component Shared Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-collision-ode-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-dev,
         libdart6-nightly-collision-ode (= ${binary:Version}),
         libode-dev
Description: Dynamic Animation and Robotics Toolkit - Utils Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-planning
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - Planning Component Shared Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-planning-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-dev,
         libdart6-nightly-planning (= ${binary:Version}),
         libflann-dev,
         liblz4-dev
Description: Dynamic Animation and Robotics Toolkit - Planning Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-utils
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - Utils Component Shared Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-utils-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-dev,
         libdart6-nightly-collision-bullet-dev,
         libdart6-nightly-utils (= ${binary:Version}),
         libtinyxml-dev,
         libtinyxml2-dev
Description: Dynamic Animation and Robotics Toolkit - Utils Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-utils-urdf
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - Utils Component Shared Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-utils-urdf-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-dev,
         libdart6-nightly-utils-dev,
         libdart6-nightly-utils-urdf (= ${binary:Version}),
         liburdfdom-dev
Description: Dynamic Animation and Robotics Toolkit - Utils Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-gui
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - GUI Component Shared Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-gui-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-utils-dev,
         libdart6-nightly-gui (= ${binary:Version}),
         libdart6-nightly-external-imgui-dev,
         libdart6-nightly-external-lodepng-dev,
         freeglut3-dev,
         libxi-dev,
         libxmu-dev
Description: Dynamic Animation and Robotics Toolkit - GUI Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-gui-osg
Section: libs
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${shlibs:Depends}, ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - GUI-osg Component Shared Library
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: libdart6-nightly-gui-osg-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-gui-dev,
         libdart6-nightly-gui-osg (= ${binary:Version}),
         libopenthreads-dev,
         libopenscenegraph-dev
Description: Dynamic Animation and Robotics Toolkit - GUI-osg Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.

Package: dart6-nightly-data
Architecture: all
Depends: ${misc:Depends}
Description: Dynamic Animation and Robotics Toolkit - GUI-osg Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 .
 This package contains data for the DART applications.

Package: dart6-nightly-examples
Architecture: all
Depends: ${misc:Depends},
         dart6-nightly-data
Description: Dynamic Animation and Robotics Toolkit - GUI-osg Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 .
 This package contains examples from the DART source.

Package: dart6-nightly-tutorials
Architecture: all
Depends: ${misc:Depends},
         dart6-nightly-data
Description: Dynamic Animation and Robotics Toolkit - GUI-osg Component Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
 .
 This package contains tutorials from the DART source.

Package: libdart6-nightly-all-dev
Section: libdevel
Architecture: any
Pre-Depends: ${misc:Pre-Depends}
Depends: ${misc:Depends},
         libdart6-nightly-dev,
         libdart6-nightly-planning-dev,
         libdart6-nightly-utils-dev,
         libdart6-nightly-utils-urdf-dev,
         libdart6-nightly-gui-dev,
         libdart6-nightly-gui-osg-dev,
         libdart6-nightly-optimizer-nlopt-dev,
         libdart6-nightly-optimizer-ipopt-dev,
         libdart6-nightly-collision-bullet-dev,
         libdart6-nightly-collision-ode-dev,
         dart6-nightly-data,
         dart6-nightly-examples,
         dart6-nightly-tutorials
Description: Dynamic Animation and Robotics Toolkit - All Development Files
 DART is a collaborative, cross-platform, open source library created by the
 Georgia Tech Graphics Lab and Humanoid Robotics Lab. The library provides data
 structures and algorithms for kinematic and dynamic applications in robotics
 and computer animation.
 DART is distinguished by it's accuracy and stability due to its use of
 generalized coordinates to represent articulated rigid body systems and
 computation of Lagrange's equations derived from D.Alembert's principle to
 describe the dynamics of motion.
 For developers, in contrast to many popular physics engines which view the
 simulator as a black box, DART gives full access to internal kinematic and
 dynamic quantities, such as the mass matrix, Coriolis and centrifugal forces,
 transformation matrices and their derivatives. DART also provides efficient
 computation of Jacobian matrices for arbitrary body points and coordinate
 frames. Contact and collision are handled using an implicit time-stepping,
 velocity-based LCP (linear-complementarity problem) to guarantee
 non-penetration, directional friction, and approximated Coulomb friction cone
 conditions. For collision detection, DART uses FCL developed by Willow Garage
 and the UNC Gamma Lab.
 DART has applications in robotics and computer animation because it features a
 multibody dynamic simulator and tools for control and motion planning.
 Multibody dynamic simulation in DART is an extension of RTQL8, an open source
 software created by the Georgia Tech Graphics Lab.
